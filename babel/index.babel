var Modal = ReactBootstrap.Modal;
var Button = ReactBootstrap.Button;

var Ingredient = React.createClass({
  render: function() {
    return (
      <li>{this.props.ingredient}</li>
    );
  }
});

var Recipes = React.createClass({
  
  getInitialState: function() {
    return {editing: false};
  },
  
  eachIngredient: function(text, i) {
    return (
      <Ingredient ingredient={text} />
    );
  },
  
  removeRecipe: function() {
    console.log( "Deleting Recipe" );
    this.props.deleteFromBoard(this.props.index);
  },
  
  editingRecipe: function() {
    this.setState({editing: true});
  },
  
  close: function() {
    this.setState({editing: false});
  },
  
  updateRecipe: function() {
    console.log(" Updating Recipe ");
    var name = this.refs.newName.value;
    var ingredients = this.refs.newIngredients.value;
    ingredients = ingredients.split(",");
    var recipe = {
      "name": name,
      "ingredients": ingredients
    };
    this.props.updateFromBoard(recipe, this.props.index);
    this.close();
  },
  
  render: function() {
    return (
      <div>
        <div className="panel panel-default">
    <div className="myclass panel-heading" role="tab">
      <h4 className="panel-title">
        <a role="button" data-toggle="collapse" data-parent="#accordion" href={"#" + this.props.index} aria-expanded="true" aria-controls={this.props.index}>
          <span className="text-primary">{this.props.name}</span>
        </a>
      </h4>
    </div>
    <div id={this.props.index} className="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne">
      <div className="panel-body">
        <h4 className="ingredients">Ingredients</h4><hr />
        <ul>
          {this.props.ingredients.map(this.eachIngredient)}
        </ul>
        <hr />
        <button className="btn btn-danger" onClick={this.removeRecipe}>Delete</button>&nbsp;
        <button onClick={this.editingRecipe} data-toggle="modal" data-target="#editrecipe" className="btn btn-warning">Edit</button>
      
        <Modal show={this.state.editing} className="col-xs-12 col-sm-8 col-sm-offset-2">
        <Modal.Header>
        <Modal.Title>Edit Recipe</Modal.Title>
      </Modal.Header>

      <Modal.Body>
        <form>
          <div className="form-group">
            <label for="edit-name" className="control-label">Recipe</label>
            <input type="text" ref="newName" defaultValue={this.props.name} className="form-control" id="edit-name" placeholder="Recipe Name" />
          </div>
          <div className="form-group">
            <label for="edit-ingredients" className="control-label">Ingredients</label>
            <textarea ref="newIngredients" className="form-control" defaultValue={this.props.ingredients} id="edit-ingredients" placeholder="Enter Ingredients, Separated by comma"></textarea>
          </div>
        </form>
      </Modal.Body>

      <Modal.Footer>
        <Button onClick={this.updateRecipe} bsStyle="primary">Edit Recipe</Button>
        <Button onClick={this.close}>Close</Button>
      </Modal.Footer>
  
      </Modal>
        
      </div>
    </div>
  </div>
      </div>
    );
  }
});

var Board = React.createClass({
  
  getInitialState: function() {
    // gets the list of all stored recipies
    return {recipes: [
        {
          "name": "Spaghetti",
          "ingredients": ["Noodles", "Tomato Sauce"]
        },
        {
          "name": "Onion Pie",
          "ingredients": ["Onion", "Pie Crust"]
        }
      ], add: false};  
  },
  
  removeRecipe: function(i) {
    console.log( "Deleting Recipe from board:" );
    var array = this.state.recipes;
    array.splice(i, 1);
    this.setState({recipes: array});
    
  },
  
  updateRecipe: function(newData, i) {
    console.log("Editing Recipe");
    var array = this.state.recipes;
    array[i] = newData;
    this.setState({recipes: array});
  },
  
  eachRecipe: function(data, i) {
    return (
      <Recipes index={i} name={data.name} ingredients={data.ingredients} deleteFromBoard={this.removeRecipe} updateFromBoard={this.updateRecipe} />
    );
  },
  
  addRecipe: function() {
     this.setState({add: true});
  },
  
  close: function() {
    this.setState({add: false})
  },
  
  saveRecipe: function() {
    var name = document.getElementById("recipe-name").value;
    var ingredients = document.getElementById("ingredients").value;
    ingredients = ingredients.split(",");
    console.log( name, ingredients);
    if (name == ""){
      name = "Untitled";
    }
    var recipe = {
      "name": name,
      "ingredients": ingredients
    };
    var array = this.state.recipes;
    array.push(recipe);
    this.setState({recipes: array});
    this.close();
  },
  
  render: function() {
    return (
      <div className="container">
        <div className="jumbotron">
          {this.state.recipes.map(this.eachRecipe)}  
        </div>
        <button onClick={this.addRecipe} className="btn btn-lg btn-primary">Add New Recipe </button>
      <Modal show={this.state.add} className="col-xs-12 col-sm-8 col-sm-offset-2">
        <Modal.Header>
        <Modal.Title>Add a Recipe</Modal.Title>
      </Modal.Header>

      <Modal.Body>
        <form>
          <div className="form-group">
            <label for="recipe-name" className="control-label">Recipe</label>
            <input type="text" className="form-control" id="recipe-name" placeholder="Recipe Name" />
          </div>
          <div className="form-group">
            <label for="ingredients" className="control-label">Ingredients</label>
            <textarea className="form-control" id="ingredients" placeholder="Enter Ingredients, Separated by comma"></textarea>
          </div>
        </form>
      </Modal.Body>

      <Modal.Footer>
        <Button onClick={this.saveRecipe} bsStyle="primary">Add Recipe</Button>
        <Button onClick={this.close}>Close</Button>
      </Modal.Footer>
  
      </Modal>
      </div>
    );  
  }
});

ReactDOM.render(
  <Board />,
  document.getElementById("board")
);